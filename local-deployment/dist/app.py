#!/usr/bin/env python3
"""
True-Asset-ALLUSE Local Deployment Application
Generated by build system on 2025-09-11T17:48:23.612100
Build ID: 20250911_174800
Mode: live
"""

import sys
import json
import sqlite3
from pathlib import Path
from datetime import datetime
from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
import uvicorn

# Application configuration
CONFIG_FILE = Path(__file__).parent / "config.json"
config = json.loads(CONFIG_FILE.read_text())

# Create FastAPI application
app = FastAPI(
    title="True-Asset-ALLUSE",
    description="Intelligent Wealth Management System - Engineered for Compounding Income and Corpus",
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc"
)

class DatabaseManager:
    """Database operations manager"""
    
    def __init__(self, db_path):
        self.db_path = db_path
        
    def get_connection(self):
        return sqlite3.connect(self.db_path)
        
    def get_portfolio(self):
        conn = self.get_connection()
        cursor = conn.cursor()
        cursor.execute("""
            SELECT symbol, quantity, avg_price, current_price, market_value, pnl
            FROM portfolio ORDER BY market_value DESC
        """)
        results = cursor.fetchall()
        conn.close()
        
        return [{
            "symbol": row[0],
            "quantity": row[1],
            "avg_price": row[2],
            "current_price": row[3],
            "market_value": row[4],
            "pnl": row[5]
        } for row in results]
        
    def get_system_health(self):
        return {
            "status": "healthy",
            "mode": config["mode"],
            "build_id": config["build_id"],
            "uptime": "Running",
            "database": "Connected"
        }

# Initialize database manager
db = DatabaseManager(config["database_path"])

@app.get("/", response_class=HTMLResponse)
async def root():
    return """
    <!DOCTYPE html>
    <html>
    <head>
        <title>True-Asset-ALLUSE</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
            body {{ font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 0; background: #f8f9fa; }}
            .container {{ max-width: 1200px; margin: 0 auto; padding: 20px; }}
            .header {{ text-align: center; margin-bottom: 40px; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }}
            .nav {{ display: flex; justify-content: center; gap: 20px; margin: 30px 0; }}
            .nav a {{ padding: 12px 24px; background: #007bff; color: white; text-decoration: none; border-radius: 6px; font-weight: 500; }}
            .nav a:hover {{ background: #0056b3; }}
            .status {{ background: #d4edda; border: 1px solid #c3e6cb; color: #155724; padding: 15px; border-radius: 6px; margin: 20px 0; }}
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üöÄ True-Asset-ALLUSE</h1>
                <h2>Intelligent Wealth Management System</h2>
                <p>Engineered for Compounding Income and Corpus</p>
                <div class="status">
                    ‚úÖ System Status: Active | Mode: {self.mode.upper()} | Build: {self.build_id}
                </div>
            </div>
            
            <div class="nav">
                <a href="/dashboard">üìä Dashboard</a>
                <a href="/portfolio">üíº Portfolio</a>
                <a href="/health">üè• System Health</a>
                <a href="/docs">üìö API Documentation</a>
            </div>
        </div>
    </body>
    </html>
    """

@app.get("/dashboard", response_class=HTMLResponse)
async def dashboard():
    portfolio = db.get_portfolio()
    total_value = sum(p["market_value"] for p in portfolio)
    total_pnl = sum(p["pnl"] for p in portfolio)
    
    # Generate portfolio rows
    portfolio_rows = ""
    for p in portfolio:
        portfolio_rows += """
                        <tr>
                            <td><strong>""" + p["symbol"] + """</strong></td>
                            <td>""" + str(int(p["quantity"])) + """</td>
                            <td>$""" + "{:.2f}".format(p["avg_price"]) + """</td>
                            <td>$""" + "{:.2f}".format(p["current_price"]) + """</td>
                            <td>$""" + "{:.2f}".format(p["market_value"]) + """</td>
                            <td class="positive">$""" + "{:.2f}".format(p["pnl"]) + """</td>
                        </tr>"""
    
    return """
    <!DOCTYPE html>
    <html>
    <head>
        <title>True-Asset-ALLUSE Dashboard</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 0; background: #f8f9fa; }
            .container { max-width: 1400px; margin: 0 auto; padding: 20px; }
            .header { text-align: center; margin-bottom: 30px; }
            .metrics { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 30px 0; }
            .metric { background: white; padding: 25px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); text-align: center; }
            .metric h3 { margin: 0 0 10px 0; color: #666; font-size: 14px; text-transform: uppercase; }
            .metric .value { font-size: 28px; font-weight: bold; color: #007bff; }
            .metric .change { font-size: 14px; margin-top: 5px; }
            .positive { color: #28a745; }
            .portfolio { background: white; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); padding: 30px; }
            .portfolio table { width: 100%; border-collapse: collapse; }
            .portfolio th, .portfolio td { padding: 12px; text-align: left; border-bottom: 1px solid #eee; }
            .portfolio th { background: #f8f9fa; font-weight: 600; }
            .back-link { display: inline-block; margin-bottom: 20px; color: #007bff; text-decoration: none; }
        </style>
    </head>
    <body>
        <div class="container">
            <a href="/" class="back-link">‚Üê Back to Home</a>
            
            <div class="header">
                <h1>üìä Portfolio Dashboard</h1>
                <p>Real-time portfolio performance and analytics</p>
            </div>
            
            <div class="metrics">
                <div class="metric">
                    <h3>Total Portfolio Value</h3>
                    <div class="value">$""" + "{:,.2f}".format(total_value) + """</div>
                </div>
                <div class="metric">
                    <h3>Total P&L</h3>
                    <div class="value positive">$""" + "{:,.2f}".format(total_pnl) + """</div>
                    <div class="change positive">+""" + "{:.2f}".format((total_pnl/total_value*100)) + """%</div>
                </div>
                <div class="metric">
                    <h3>Active Positions</h3>
                    <div class="value">""" + str(len(portfolio)) + """</div>
                </div>
                <div class="metric">
                    <h3>System Status</h3>
                    <div class="value" style="color: #28a745;">Active</div>
                </div>
            </div>
            
            <div class="portfolio">
                <h3>Portfolio Holdings</h3>
                <table>
                    <thead>
                        <tr>
                            <th>Symbol</th>
                            <th>Quantity</th>
                            <th>Avg Price</th>
                            <th>Current Price</th>
                            <th>Market Value</th>
                            <th>P&L</th>
                        </tr>
                    </thead>
                    <tbody>""" + portfolio_rows + """
                    </tbody>
                </table>
            </div>
        </div>
    </body>
    </html>
    """

@app.get("/portfolio")
async def get_portfolio():
    return db.get_portfolio()

@app.get("/health")
async def health_check():
    return db.get_system_health()

@app.get("/api/v1/system/info")
async def system_info():
    return {
        "name": "True-Asset-ALLUSE",
        "version": "1.0.0",
        "mode": config["mode"],
        "build_id": config["build_id"],
        "status": "running"
    }

if __name__ == "__main__":
    print("üöÄ True-Asset-ALLUSE Starting...")
    print("üìä Mode: " + config['mode'].upper())
    print("üåê URL: http://" + config['host'] + ":" + str(config['port']))
    print("üìö API Docs: http://" + config['host'] + ":" + str(config['port']) + "/docs")
    print("üìä Dashboard: http://" + config['host'] + ":" + str(config['port']) + "/dashboard")
    print("")
    print("Press Ctrl+C to stop the server")
    print("")
    
    uvicorn.run(
        app,
        host=config["host"],
        port=config["port"],
        log_level="info",
        access_log=True
    )
